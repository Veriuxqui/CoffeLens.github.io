<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
<title>Coffelens - Tienda de Lentes Elegante</title>
<style>
  /* Import elegant serif font */
  @import url('https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,700;1,300&family=Montserrat:wght@400;600&display=swap');

  /* Reset & base */
  *, *::before, *::after {
    box-sizing: border-box;
  }
  body {
    margin: 0; padding: 0;
    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
      Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
    background: #84613B;
    color: #f0e8e0;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    min-height: 100vh;
    overflow-x: hidden;
    position: relative;
  }
  /* Subtle textured pattern behind content */
  body::before {
    content: "";
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    background: radial-gradient(circle at center, rgba(255,255,255,0.05) 1px, transparent 2px),
                radial-gradient(circle at center, rgba(255,255,255,0.03) 1px, transparent 2px);
    background-position: 0 0, 25px 25px;
    background-size: 50px 50px;
    pointer-events: none;
    z-index: 0;
  }
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Merriweather', serif;
    font-weight: 700;
    margin: 0 0 0.4em 0;
    color: #f3dbb2;
    text-shadow: 1px 1px 4px rgba(0,0,0,0.25);
  }
  p {
    color: #eedfc7;
    font-family: 'Montserrat', sans-serif;
    font-weight: 400;
    font-size: 1rem;
    text-shadow: 0 0 4px rgba(0,0,0,0.15);
  }
  a {
    text-decoration: none;
    color: inherit;
  }
  button {
    cursor: pointer;
    border: none;
    background: none;
    font-family: inherit;
  }

  /* Container */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 15px 30px 80px;
    position: relative;
    z-index: 10;
  }

  /* Header */
  header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 30px 0 20px;
    border-bottom: 1px solid rgba(255,255,255,0.15);
    background: rgba(132, 97, 59, 0.85);
    position: sticky;
    top: 0;
    z-index: 100;
    box-shadow: 0 4px 12px rgba(0 0 0 / 0.3);
  }
  .logo {
    font-size: 2.4rem;
    font-weight: 700;
    color: #f3dbb2;
    letter-spacing: 3px;
    user-select: none;
    font-family: 'Merriweather', serif;
  }
  .search-cart-wrapper {
    display: flex;
    align-items: center;
    gap: 20px;
    flex-grow: 1;
    max-width: 600px;
    margin-left: 40px;
  }
  .search-bar {
    position: relative;
    flex-grow: 1;
  }
  .search-bar input[type="search"] {
    width: 100%;
    padding: 12px 40px 12px 18px;
    border: 2px solid #bbb;
    border-radius: 30px;
    font-size: 1.1rem;
    font-weight: 400;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    color: #444;
  }
  .search-bar input[type="search"]::placeholder {
    font-style: italic;
    color: #999;
  }
  .search-bar input[type="search"]:focus {
    outline: none;
    border-color: #a07a4f;
    box-shadow: 0 0 8px rgba(160, 122, 79, 0.6);
  }
  .search-bar button {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    background-color: transparent;
    border: none;
    font-size: 1.4rem;
    color: #a07a4f;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color 0.3s ease;
  }
  .search-bar button:hover {
    color: #7c5e36;
  }

  /* Minimalist magnifying glass SVG for search */
  .search-icon {
    width: 18px;
    height: 18px;
    stroke: #a07a4f;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;
  }

  /* Cart icon next to search */
  .cart-icon-wrapper {
    position: relative;
    cursor: pointer;
    display: flex;
    align-items: center;
  }
  .cart-icon {
    width: 28px;
    height: 28px;
    stroke: #a07a4f;
    stroke-width: 2.2;
    fill: none;
    stroke-linejoin: round;
    stroke-linecap: round;
    transition: stroke 0.3s ease;
  }
  .cart-icon-wrapper:hover .cart-icon,
  .cart-icon-wrapper:focus {
    stroke: #7c5e36;
  }
  .cart-count {
    position: absolute;
    top: -6px;
    right: -8px;
    background: #d4b691;
    color: #84613b;
    border-radius: 50%;
    font-size: 0.75rem;
    font-weight: 700;
    min-width: 20px;
    min-height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 6px;
    user-select: none;
  }

  /* Main layout */
  main {
    display: flex;
    margin-top: 45px;
    gap: 32px;
  }

  /* Filters */
  .filters {
    flex: 1;
    max-width: 230px;
    border: 1px solid #a07a4f;
    border-radius: 16px;
    padding: 24px 22px;
    height: fit-content;
    background: rgba(132, 97, 59, 0.85);
    box-shadow: 0 8px 16px rgba(0,0,0,0.12);
    font-family: 'Montserrat', sans-serif;
  }
  .filters h2 {
    font-size: 1.5rem;
    margin-bottom: 20px;
    font-weight: 700;
    color: #f3dbb2;
  }
  .filter-group {
    margin-bottom: 18px;
  }
  .filter-group label {
    display: block;
    margin-bottom: 10px;
    font-size: 1rem;
    cursor: pointer;
    color: #f3dbb2;
  }
  .filter-group input[type="checkbox"] {
    margin-right: 10px;
    cursor: pointer;
    transform: scale(1.1);
  }

  /* Products */
  .products {
    flex: 3;
    display: grid;
    grid-template-columns: repeat(auto-fill,minmax(220px,1fr));
    gap: 28px;
  }
  .product-card {
    border-radius: 18px;
    overflow: hidden;
    background: #f1e4c4;
    color: #84613b;
    box-shadow: 0 8px 20px rgba(0,0,0,0.15);
    display: flex;
    flex-direction: column;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.5s forwards;
  }
  .product-card:hover {
    box-shadow: 0 16px 35px rgba(0,0,0,0.3);
    transform: translateY(-5px);
  }
  .product-image {
    width: 100%;
    aspect-ratio: 4 / 3;
    object-fit: cover;
    border-bottom: 1px solid #cebb91;
    transition: transform 0.4s ease;
  }
  .product-card:hover .product-image {
    transform: scale(1.05);
  }
  .product-details {
    padding: 18px 22px 24px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
  .product-name {
    font-weight: 700;
    font-size: 1.2rem;
    margin: 0 0 10px;
    cursor: pointer;
  }
  .product-desc {
    flex-grow: 1;
    font-size: 1rem;
    margin-bottom: 18px;
    line-height: 1.4;
  }
  .product-price {
    font-weight: 700;
    font-size: 1.2rem;
    margin-bottom: 14px;
    font-family: 'Merriweather', serif;
  }
  .product-actions {
    text-align: right;
  }
  .product-actions button {
    background-color: #a07a4f;
    color: white;
    padding: 11px 22px;
    border-radius: 40px;
    font-weight: 700;
    font-size: 1rem;
    letter-spacing: 0.03em;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 5px 14px rgba(160,122,79,0.6);
  }
  .product-actions button:hover,
  .product-actions button:focus {
    background-color: #7c5e36;
    box-shadow: 0 8px 18px rgba(124,94,54,0.8);
    outline-offset: 3px;
  }

  /* Cart modal */
  .cart-modal {
    position: fixed;
    top: 0; right: 0; bottom: 0; width: 360px;
    background: #f1e4c4;
    border-left: 1.5px solid #a07a4f;
    box-shadow: -8px 0 24px rgba(0,0,0,0.3);
    z-index: 200;
    transform: translateX(100%);
    transition: transform 0.35s ease;
    display: flex;
    flex-direction: column;
    font-family: 'Montserrat', sans-serif;
    letter-spacing: 0.015em;
  }
  .cart-modal.active {
    transform: translateX(0);
  }
  .cart-modal-header {
    position: relative;
    padding: 24px;
    background: #7c5e36;
    color: #f3dbb2;
    font-size: 1.6rem;
    font-weight: 700;
    border-radius: 0 0 20px 0;
    box-shadow: inset 0 -4px 10px rgba(0, 0, 0, 0.3);
  }
  .cart-modal-close {
    cursor: pointer;
    position: absolute;
    top: 12px;
    right: 16px;
    font-size: 2.4rem;
    font-weight: 700;
    color: #f3dbb2;
    background: transparent;
    border: none;
    transition: color 0.3s ease;
  }
  .cart-modal-close:hover, .cart-modal-close:focus {
    color: #c9b289;
    outline-offset: 3px;
  }
  .cart-items {
    flex-grow: 1;
    overflow-y: auto;
    padding: 16px 24px;
  }
  .cart-item {
    display: flex;
    align-items: center;
    margin-bottom: 16px;
    border-bottom: 1px solid rgba(173, 142, 93, 0.3);
    padding-bottom: 12px;
  }
  .cart-item img {
    width: 60px;
    height: 48px;
    object-fit: cover;
    border-radius: 12px;
    margin-right: 14px;
    border: 1.3px solid #c9af8b;
  }
  .cart-item-info {
    flex-grow: 1;
  }
  .cart-item-name {
    font-weight: 600;
    color: #7c5e36;
    font-size: 1.04rem;
    margin-bottom: 6px;
  }
  .cart-item-price {
    color: #a88f50;
    font-weight: 700;
    font-size: 1rem;
    margin-bottom: 0;
  }
  .cart-item-remove {
    background: transparent;
    color: #8c613b;
    font-weight: 700;
    font-size: 1.3rem;
    border: none;
    cursor: pointer;
    padding: 0 8px;
    transition: color 0.3s ease;
  }
  .cart-item-remove:hover,
  .cart-item-remove:focus {
    color: #6f4f29;
    outline-offset: 3px;
  }
  .cart-summary-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 14px 24px;
    border-top: 2px solid rgba(173, 142, 93, 0.4);
  }
  .cart-summary {
    font-weight: 700;
    font-size: 1.3rem;
    color: #a88f50;
    font-family: 'Merriweather', serif;
  }
  .empty-cart {
    font-style: italic;
    color: #d9cbb4;
    text-align: center;
    margin: 28px 0;
    font-family: 'Montserrat', sans-serif;
  }
  .order-btn {
    background-color: #a07a4f;
    color: white;
    padding: 10px 20px;
    font-weight: 700;
    font-size: 1rem;
    border-radius: 40px;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(160,122,79,0.7);
    border: none;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
  }
  .order-btn:hover,
  .order-btn:focus {
    background-color: #7c5e36;
    box-shadow: 0 6px 16px rgba(124,94,54,0.9);
    outline-offset: 3px;
  }

  /* Sections about/contact */
  section.info-section {
    margin-top: 70px;
    padding: 28px 32px;
    background: rgba(132, 97, 59, 0.85);
    border-radius: 20px;
    max-width: 850px;
    margin-left: auto;
    margin-right: auto;
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3);
    font-family: 'Montserrat', sans-serif;
  }
  section.info-section h2 {
    font-weight: 700;
    font-size: 1.75rem;
    margin-bottom: 16px;
    color: #f3dbb2;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
  }
  section.info-section p {
    font-size: 1.05rem;
    color: #eedfc7;
    line-height: 1.6;
    text-shadow: 0 0 5px rgba(0,0,0,0.3);
  }
  form.contact-form {
    display: flex;
    flex-direction: column;
    gap: 16px;
    margin-top: 18px;
  }
  form.contact-form label {
    font-weight: 600;
    color: #eedfc7;
    text-shadow: 0 0 3px rgba(0,0,0,0.3);
  }
  form.contact-form input,
  form.contact-form textarea {
    padding: 12px 16px;
    font-size: 1.05rem;
    border-radius: 14px;
    border: 2px solid rgba(255,255,255,0.5);
    resize: vertical;
    font-family: 'Montserrat', sans-serif;
    background: rgba(255 255 255 / 0.95);
    color: #553020;
    transition: border-color 0.3s ease;
  }
  form.contact-form input:focus,
  form.contact-form textarea:focus {
    outline: none;
    border-color: #a07a4f;
    box-shadow: 0 0 10px rgba(160,122,79,0.7);
  }
  form.contact-form button {
    align-self: flex-start;
    padding: 12px 28px;
    border-radius: 44px;
    background-color: #a07a4f;
    color: #553020;
    font-weight: 700;
    font-size: 1.1rem;
    border: none;
    letter-spacing: 0.02em;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 6px 20px rgba(160,122,79,0.7);
  }
  form.contact-form button:hover,
  form.contact-form button:focus {
    background-color: #7c5e36;
    box-shadow: 0 8px 26px rgba(124,94,54,0.85);
    outline-offset: 3px;
  }

  /* Animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive/Landing */
  @media (max-width: 991px) {
    main {
      flex-direction: column;
    }
    .filters {
      max-width: 100%;
      margin-bottom: 30px;
      order: 2;
      box-shadow: none;
      border: none;
      background: transparent;
      padding: 0;
    }
    .products {
      grid-template-columns: repeat(auto-fill,minmax(180px,1fr));
      order: 1;
    }
  }

  @media (max-width: 350px), (max-height: 600px) {
    body, html {
      font-size: 14px;
    }
    .product-actions button {
      padding: 8px 14px;
      font-size: 0.9rem;
    }
    header, .container {
      padding-left: 15px;
      padding-right: 15px;
    }
    .filters {
      max-width: 100%;
      padding: 8px;
    }
  }

  /* Product Detail overlay */
  .product-detail-overlay {
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 50;
    backdrop-filter: blur(2px);
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
  }
  .product-detail-overlay.active {
    opacity: 1;
    pointer-events: auto;
  }
  .product-detail-content {
    background: #f3dbb2;
    border-radius: 20px;
    max-width: 700px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.25);
    padding: 30px;
    position: relative;
    font-family: 'Montserrat', sans-serif;
    color: #553020;
  }
  .product-detail-close {
    position: absolute;
    top: 14px;
    right: 14px;
    font-size: 2rem;
    color: #553020;
    cursor: pointer;
    border: none;
    background: none;
    font-weight: 700;
    transition: color 0.3s ease;
  }
  .product-detail-close:hover,
  .product-detail-close:focus {
    color: #87643a;
    outline-offset: 4px;
  }
  .product-detail-image {
    width: 100%;
    max-height: 320px;
    object-fit: cover;
    border-radius: 14px;
    margin-bottom: 24px;
    box-shadow: 0 4px 14px rgba(85, 48, 32, 0.3);
  }
  .product-detail-name {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 16px;
    color: #553020;
  }
  .product-detail-description {
    font-size: 1.1rem;
    color: #553020;
    margin-bottom: 14px;
    line-height: 1.6;
  }
  .product-detail-price {
    font-size: 1.5rem;
    font-weight: 700;
    color: #6f4f2e;
    margin-bottom: 24px;
    font-family: 'Merriweather', serif;
  }
  .product-detail-add {
    display: inline-block;
    background-color: #6f4f2e;
    color: white;
    padding: 14px 32px;
    border-radius: 44px;
    font-weight: 700;
    font-size: 1.1rem;
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 6px 20px rgba(111, 79, 46, 0.7);
    border: none;
  }
  .product-detail-add:hover,
  .product-detail-add:focus {
    background-color: #553020;
    box-shadow: 0 8px 26px rgba(85, 61, 33, 0.85);
    outline-offset: 4px;
  }

  /* Checkout page */
  #checkoutPage {
    display: none;
    max-width: 600px;
    margin: 80px auto 60px;
    background: #f3dbb2;
    color: #553020;
    border-radius: 20px;
    padding: 32px 36px;
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3);
    font-family: 'Montserrat', sans-serif;
  }
  #checkoutPage.active {
    display: block;
  }
  #checkoutPage h2 {
    font-family: 'Merriweather', serif;
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 24px;
  }
  #checkoutPage form {
    display: flex;
    flex-direction: column;
    gap: 18px;
  }
  #checkoutPage label {
    font-weight: 700;
    font-size: 1rem;
    color: #553020;
  }
  #checkoutPage input[type="text"],
  #checkoutPage input[type="email"],
  #checkoutPage input[type="tel"],
  #checkoutPage select {
    padding: 12px 16px;
    border-radius: 14px;
    border: 2px solid #a88f50;
    font-size: 1rem;
    font-family: 'Montserrat', sans-serif;
    color: #553020;
    background: #fffbe9;
    transition: border-color 0.3s ease;
  }
  #checkoutPage input[type="text"]:focus,
  #checkoutPage input[type="email"]:focus,
  #checkoutPage input[type="tel"]:focus,
  #checkoutPage select:focus {
    outline: none;
    border-color: #553020;
    box-shadow: 0 0 10px rgba(85,48,32,0.7);
  }
  #paymentDetails, #transferDetails {
    margin-top: 18px;
    display: none;
    font-size: 0.95rem;
    color: #6f4f2e;
    background: #f7efd7;
    padding: 14px 20px;
    border-radius: 12px;
  }
  #transferDetails p {
    margin: 6px 0;
  }
  #checkoutPage button.confirm-order {
    margin-top: 28px;
    padding: 14px 28px;
    border-radius: 44px;
    background-color: #8c6a3b;
    color: white;
    font-weight: 700;
    font-size: 1.2rem;
    border: none;
    cursor: pointer;
    box-shadow: 0 6px 20px rgba(140, 106, 59, 0.85);
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
  }
  #checkoutPage button.confirm-order:hover,
  #checkoutPage button.confirm-order:focus {
    background-color: #6f522b;
    box-shadow: 0 8px 26px rgba(111, 82, 43, 1);
    outline-offset: 3px;
  }
  #backToStoreBtn {
    margin-top: 18px;
    background: none;
    border: none;
    color: #553020;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    text-decoration: underline;
  }
  #backToStoreBtn:hover,
  #backToStoreBtn:focus {
    color: #8c6a3b;
    outline-offset: 3px;
  }

  /* Animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive */
  @media (max-width: 991px) {
    main {
      flex-direction: column;
    }
    .filters {
      max-width: 100%;
      margin-bottom: 30px;
      order: 2;
      box-shadow: none;
      border: none;
      background: transparent;
      padding: 0;
    }
    .products {
      grid-template-columns: repeat(auto-fill,minmax(180px,1fr));
      order: 1;
    }
  }

  @media (max-width: 350px), (max-height: 600px) {
    body, html {
      font-size: 14px;
    }
    .product-actions button {
      padding: 8px 14px;
      font-size: 0.9rem;
    }
    header, .container {
      padding-left: 15px;
      padding-right: 15px;
    }
    .filters {
      max-width: 100%;
      padding: 8px;
    }
  }
</style>
</head>
<body>
<header class="container" role="banner" id="headerSection">
  <div class="logo" aria-label="Logotipo Coffelens">Coffelens</div>
  <div class="search-cart-wrapper">
    <form class="search-bar" role="search" onsubmit="event.preventDefault(); filterProducts();" id="productSearchForm">
      <input type="search" id="searchInput" placeholder="Buscar lentes..." aria-label="Buscar lentes" />
      <button type="submit" aria-label="Buscar">
        <!-- Minimalist magnifying glass SVG -->
        <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
          <circle cx="11" cy="11" r="7" />
          <line x1="21" y1="21" x2="16.65" y2="16.65" />
        </svg>
      </button>
    </form>
    <div class="cart-icon-wrapper" tabindex="0" role="button" aria-label="Abrir/Cerrar carrito de compras" onclick="toggleCart()" onkeypress="if(event.key==='Enter' || event.key===' ') { event.preventDefault(); toggleCart(); }">
      <svg class="cart-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
        <path d="M6 6h15l-1.5 9h-13"/>
        <circle cx="9" cy="20" r="1"/>
        <circle cx="18" cy="20" r="1"/>
      </svg>
      <div class="cart-count" id="cartCount" aria-live="polite" aria-atomic="true">0</div>
    </div>
  </div>
</header>

<main class="container" role="main" aria-label="Contenido principal de tienda" id="storeMain">
  <aside class="filters" aria-label="Filtros de productos">
    <h2>Filtros</h2>
    <div class="filter-group" role="group" aria-labelledby="filtro-tipo">
      <div id="filtro-tipo" style="font-weight: 700; margin-bottom: 6px;">Tipo de Lente</div>
      <label><input type="checkbox" name="type" value="Polarizado" /> Polarizado</label>
      <label><input type="checkbox" name="type" value="Blue Light" /> Blue Light</label>
      <label><input type="checkbox" name="type" value="Fotocromático" /> Fotocromático</label>
    </div>
  </aside>

  <section class="products" aria-live="polite" aria-label="Listado de productos">
    <!-- Products will be injected here -->
  </section>
</main>

<!-- Cart Modal -->
<div class="cart-modal" id="cartModal" aria-label="Carrito de compras" role="dialog" aria-modal="true" tabindex="-1" hidden>
  <div class="cart-modal-header">
    Carrito
    <button aria-label="Cerrar carrito" class="cart-modal-close" id="cartCloseBtn">&times;</button>
  </div>
  <div class="cart-items" id="cartItems" tabindex="0">
    <p class="empty-cart">Tu carrito está vacío</p>
  </div>
  <div class="cart-summary-container">
    <div class="cart-summary" id="cartTotal" aria-live="polite" aria-atomic="true">Total: $0.00</div>
    <button class="order-btn" id="orderBtn" type="button">Realizar pedido</button>
  </div>
</div>

<section class="info-section" aria-labelledby="section-about-title" tabindex="0" id="aboutSection">
  <h2 id="section-about-title">En Coffelens creamos lentes de alta calidad con diseño elegante y minimalista.</h2>
  <p>
    Nuestro compromiso es ofrecerte una experiencia visual única con productos hechos a mano con pasión y dedicación. Son a base de café y que son 100% biodegradables.
  </p>
  <ul style="color: #d9cbb4; margin-top: 1em; line-height: 1.5; font-size: 1rem; list-style-type: disc; padding-left: 1.2em;">
    <li>Materiales ecológicos y sostenibles.</li>
    <li>Diseño sofisticado y cómodo para uso diario.</li>
    <li>Alta resistencia y durabilidad garantizadas.</li>
    <li>Compromiso con prácticas amigables con el medio ambiente.</li>
    <li>Perfectos para proteger tus ojos con estilo.</li>
  </ul>
</section>

<section class="info-section" aria-labelledby="section-contact-title" tabindex="0" id="contactSection">
  <h2 id="section-contact-title">Contacto</h2>
  <p>¿Tienes preguntas? Escríbenos y te responderemos pronto.</p>
  <form class="contact-form" id="contactForm" onsubmit="handleContactSubmit(event)">
    <label for="contactName">Nombre</label>
    <input type="text" id="contactName" name="contactName" required aria-required="true" placeholder="Tu nombre" />
    <label for="contactEmail">Correo electrónico</label>
    <input type="email" id="contactEmail" name="contactEmail" required aria-required="true" placeholder="tu@email.com" />
    <label for="contactMessage">Mensaje</label>
    <textarea id="contactMessage" name="contactMessage" rows="4" required aria-required="true" placeholder="Escribe tu mensaje"></textarea>
    <button type="submit">Enviar</button>
  </form>
</section>

<!-- Product Detail Modal -->
<div class="product-detail-overlay" id="productDetailOverlay" role="dialog" aria-modal="true" aria-labelledby="detailTitle" aria-describedby="detailDesc" hidden>
  <div class="product-detail-content">
    <button class="product-detail-close" aria-label="Cerrar descripción de producto" id="closeDetailBtn">&times;</button>
    <img src="" alt="" class="product-detail-image" id="detailImage">
    <h2 class="product-detail-name" id="detailTitle"></h2>
    <p class="product-detail-description" id="detailDesc"></p>
    <div class="product-detail-price" id="detailPrice"></div>
    <button class="product-detail-add" id="detailAddBtn">Añadir al carrito</button>
  </div>
</div>

<!-- Checkout Page -->
<section id="checkoutPage" aria-labelledby="checkoutTitle" tabindex="0" hidden>
  <h2 id="checkoutTitle">Realizar pedido</h2>
  <form id="checkoutForm" novalidate>
    <label for="nameInput">Nombre completo</label>
    <input type="text" id="nameInput" name="nameInput" placeholder="Tu nombre completo" required autocomplete="name" />

    <label for="emailInput">Correo electrónico</label>
    <input type="email" id="emailInput" name="emailInput" placeholder="tu@email.com" required autocomplete="email" />

    <label for="paymentMethod">Método de pago</label>
    <select id="paymentMethod" name="paymentMethod" required aria-required="true">
      <option value="" disabled selected>Selecciona un método</option>
      <option value="card">Tarjeta de débito/crédito</option>
      <option value="transfer">Transferencia bancaria</option>
    </select>

    <div id="paymentDetails">
      <label for="cardName">Nombre en la tarjeta</label>
      <input type="text" id="cardName" name="cardName" placeholder="Nombre como aparece en la tarjeta" autocomplete="cc-name" />

      <label for="cardNumber">Número de tarjeta</label>
      <input type="text" id="cardNumber" name="cardNumber" placeholder="1234 5678 9012 3456" maxlength="19" autocomplete="cc-number" inputmode="numeric" />

      <label for="cardExpiry">Fecha de expiración (MM/AA)</label>
      <input type="text" id="cardExpiry" name="cardExpiry" placeholder="MM/AA" maxlength="5" autocomplete="cc-exp" inputmode="numeric" />

      <label for="cardCVC">Código CVC</label>
      <input type="text" id="cardCVC" name="cardCVC" placeholder="123" maxlength="4" autocomplete="cc-csc" inputmode="numeric" />
    </div>

    <div id="transferDetails">
      <p>Por favor realiza la transferencia a la siguiente cuenta bancaria:</p>
      <p><strong>Banco:</strong> Banco Ejemplo</p>
      <p><strong>Cuenta:</strong> 1234567890</p>
      <p><strong>CLABE:</strong> 012345678901234567</p>
      <p><em>Después de realizar la transferencia, envíanos el comprobante mediante nuestro formulario de contacto.</em></p>
    </div>

    <button type="submit" class="confirm-order">Confirmar compra</button>
    <button type="button" id="backToStoreBtn">Volver a la tienda</button>
  </form>
</section>

<script>
  // Products data
  const products = [
    {
      id: 1,
      name: "Lente Polarizado Clásico",
      description: "Lentes con filtro polarizado para reducir el deslumbramiento y mejorar la claridad visual.",
      price: 499.00,
      image: "https://i.imgur.com/HXYtPxf.jpg",
      type: "Polarizado"
    },
    {
      id: 4,
      name: "Lente Blue Light Protector",
      description: "Protege tus ojos de la luz azul emitida por dispositivos electrónicos.",
      price: 499.00,
      image: "https://i.imgur.com/WVLQexq.jpg",
      type: "Blue Light"
    },
    {
      id: 5,
      name: "Lente Polarizado Deportivo",
      description: "Diseñado para actividad al aire libre con máxima protección y durabilidad.",
      price: 499.00,
      image: "https://i.imgur.com/19PGvOO.jpg",
      type: "Polarizado"
    },
    {
      id: 7,
      name: "Lente Fotocromático Lite",
      description: "Versión ligera y cómoda de los lentes fotocromáticos, ideal para todo el día.",
      price: 499.00,
      image: "https://i.imgur.com/qnr1Wi7.jpg",
      type: "Fotocromático"
    },
    {
      id: 8,
      name: "Lente Blue Light Minimal",
      description: "Estilo minimalista con protección contra luz azul, ideal para profesionales.",
      price: 499.00,
      image: "https://i.imgur.com/fmPRpZE.jpg",
      type: "Blue Light"
    }
  ];

  // Cart state
  let cart = [];

  const productsContainer = document.querySelector(".products");
  const productDetailOverlay = document.getElementById("productDetailOverlay");
  const detailImage = document.getElementById("detailImage");
  const detailTitle = document.getElementById("detailTitle");
  const detailDesc = document.getElementById("detailDesc");
  const detailPrice = document.getElementById("detailPrice");
  const detailAddBtn = document.getElementById("detailAddBtn");
  const closeDetailBtn = document.getElementById("closeDetailBtn");
  const cartCountElem = document.getElementById("cartCount");
  const cartModal = document.getElementById("cartModal");
  const cartCloseBtn = document.getElementById("cartCloseBtn");
  const cartItemsContainer = document.getElementById("cartItems");
  const cartTotal = document.getElementById("cartTotal");
  const orderBtn = document.getElementById("orderBtn");
  const checkoutPage = document.getElementById("checkoutPage");
  const storeMain = document.getElementById("storeMain");
  const headerSection = document.getElementById("headerSection");
  const aboutSection = document.getElementById("aboutSection");
  const contactSection = document.getElementById("contactSection");
  const paymentMethodSelect = document.getElementById("paymentMethod");
  const paymentDetails = document.getElementById("paymentDetails");
  const transferDetails = document.getElementById("transferDetails");
  const backToStoreBtn = document.getElementById("backToStoreBtn");
  const checkoutForm = document.getElementById("checkoutForm");

  let currentDetailProductId = null;

  // Render products filtered
  function renderProducts(filteredProducts) {
    productsContainer.innerHTML = "";
    if(filteredProducts.length === 0) {
      productsContainer.innerHTML = "<p>No se encontraron productos.</p>";
      return;
    }
    filteredProducts.forEach(p => {
      const card = document.createElement("article");
      card.className = "product-card";
      card.setAttribute("tabindex", "0");
      card.innerHTML = `
        <img src="${p.image}" alt="Lente ${p.name}" class="product-image" />
        <div class="product-details">
          <h3 class="product-name" role="button" tabindex="0" aria-pressed="false">${p.name}</h3>
          <p class="product-desc">${p.description}</p>
          <div class="product-price">$${p.price.toFixed(2)}</div>
          <div class="product-actions">
            <button aria-label="Añadir ${p.name} al carrito">Añadir al carrito</button>
          </div>
        </div>
      `;
      // Click on name or image to open detail
      const nameElem = card.querySelector(".product-name");
      const imgElem = card.querySelector(".product-image");
      nameElem.addEventListener("click", () => openDetail(p.id));
      nameElem.addEventListener("keydown", e => { if(e.key === "Enter" || e.key === " ") { e.preventDefault(); openDetail(p.id); } });
      imgElem.addEventListener("click", () => openDetail(p.id));
      imgElem.style.cursor = "pointer";

      // Add to cart from the button inside card
      const btnAdd = card.querySelector(".product-actions button");
      btnAdd.addEventListener("click", () => addToCart(p.id));

      productsContainer.appendChild(card);
    });
  }

  // Open product detail modal
  function openDetail(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;
    currentDetailProductId = productId;
    detailImage.src = product.image;
    detailImage.alt = `Imagen de ${product.name}`;
    detailTitle.textContent = product.name;
    detailDesc.textContent = product.description;
    detailPrice.textContent = `$${product.price.toFixed(2)}`;
    productDetailOverlay.hidden = false;
    productDetailOverlay.classList.add("active");
    detailAddBtn.focus();
  }

  // Close product detail modal
  function closeDetail() {
    productDetailOverlay.classList.remove("active");
    productDetailOverlay.hidden = true;
    currentDetailProductId = null;
  }

  detailAddBtn.addEventListener("click", () => {
    if(currentDetailProductId !== null) {
      addToCart(currentDetailProductId);
      closeDetail();
    }
  });

  closeDetailBtn.addEventListener("click", closeDetail);

  productDetailOverlay.addEventListener("click", e => {
    if(e.target === productDetailOverlay) closeDetail();
  });

  document.addEventListener("keydown", e => {
    if(e.key === "Escape" && productDetailOverlay.classList.contains("active")) {
      closeDetail();
    }
  });

  // Update cart count display
  function updateCartCount() {
    let totalQuantity = 0;
    cart.forEach(item => {
      totalQuantity += item.quantity;
    });
    cartCountElem.textContent = totalQuantity;
  }

  // Filter products based on search and filter checkboxes
  function filterProducts() {
    const searchTerm = document.getElementById("searchInput").value.toLowerCase().trim();
    const checkedTypes = Array.from(document.querySelectorAll('input[name="type"]:checked')).map(el => el.value);

    const filtered = products.filter(p => {
      const matchesSearch = p.name.toLowerCase().includes(searchTerm) || p.description.toLowerCase().includes(searchTerm);
      const matchesType = checkedTypes.length === 0 || checkedTypes.includes(p.type);
      return matchesSearch && matchesType;
    });

    renderProducts(filtered);
  }

  // Add product to cart
  function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;
    const cartItem = cart.find(item => item.product.id === productId);
    if (cartItem) {
      cartItem.quantity++;
    } else {
      cart.push({product, quantity: 1});
    }
    renderCart();
    openCart();
  }

  // Remove product from cart
  function removeFromCart(productId) {
    cart = cart.filter(item => item.product.id !== productId);
    renderCart();
  }

  // Render cart items and total
  function renderCart() {
    if (cart.length === 0) {
      cartItemsContainer.innerHTML = '<p class="empty-cart">Tu carrito está vacío</p>';
      cartTotal.textContent = "Total: $0.00";
      updateCartCount();
      orderBtn.style.display = "none";
      return;
    }
    cartItemsContainer.innerHTML = "";
    let total = 0;
    cart.forEach(item => {
      total += item.product.price * item.quantity;
      const div = document.createElement("div");
      div.className = "cart-item";
      div.innerHTML = `
        <img src="${item.product.image}" alt="Imagen ${item.product.name}" />
        <div class="cart-item-info">
          <div class="cart-item-name">${item.product.name}</div>
          <div class="cart-item-price">$${(item.product.price * item.quantity).toFixed(2)} (${item.quantity})</div>
        </div>
        <button class="cart-item-remove" aria-label="Remover ${item.product.name} del carrito" onclick="removeFromCart(${item.product.id})">&times;</button>
      `;
      cartItemsContainer.appendChild(div);
    });
    cartTotal.textContent = `Total: $${total.toFixed(2)}`;
    updateCartCount();
    orderBtn.style.display = "inline-block";
  }

  // Toggle cart modal visibility
  function toggleCart() {
    if(cartModal.classList.contains("active")){
      closeCart();
    } else {
      openCart();
    }
  }
  function openCart(){
    cartModal.classList.add("active");
    cartModal.hidden = false;
    cartModal.focus();
  }
  function closeCart() {
    cartModal.classList.remove("active");
    setTimeout(() => cartModal.hidden = true, 350);
  }
  cartCloseBtn.addEventListener("click", closeCart);

  // Close modals on Escape key
  document.addEventListener("keydown", e => {
    if(e.key === "Escape") {
      if(productDetailOverlay.classList.contains("active")) {
        closeDetail();
      }
      if(cartModal.classList.contains("active")) {
        closeCart();
      }
      if(checkoutPage.classList.contains("active")){
        backToStore();
      }
    }
  });

  // Contact form submit handler (simulated)
  function handleContactSubmit(event) {
    event.preventDefault();
    const name = event.target.contactName.value.trim();
    const email = event.target.contactEmail.value.trim();
    const message = event.target.contactMessage.value.trim();
    if (!name || !email || !message) {
      alert("Por favor completa todos los campos.");
      return;
    }
    alert(`Gracias, ${name}! Hemos recibido tu mensaje.`);
    event.target.reset();
  }

  // Show checkout page and hide store/cart
  function showCheckout() {
    closeCart();
    storeMain.hidden = true;
    aboutSection.hidden = true;
    contactSection.hidden = true;
    checkoutPage.hidden = false;
    checkoutPage.classList.add("active");
    headerSection.style.display = "none";
    window.scrollTo(0,0);
  }

  // Return to store page
  function backToStore() {
    checkoutPage.classList.remove("active");
    checkoutPage.hidden = true;
    storeMain.hidden = false;
    aboutSection.hidden = false;
    contactSection.hidden = false;
    headerSection.style.display = "";
    window.scrollTo(0,0);
  }

  orderBtn.addEventListener("click", () => {
    if(cart.length === 0) {
      alert("El carrito está vacío.");
      return;
    }
    showCheckout();
  });

  backToStoreBtn.addEventListener("click", backToStore);

  // Show/hide payment inputs by method
  paymentMethodSelect.addEventListener("change", () => {
    if(paymentMethodSelect.value === "card"){
      paymentDetails.style.display = "block";
      transferDetails.style.display = "none";
      setCardFieldsRequired(true);
    } else if(paymentMethodSelect.value === "transfer"){
      paymentDetails.style.display = "none";
      transferDetails.style.display = "block";
      setCardFieldsRequired(false);
    } else {
      paymentDetails.style.display = "none";
      transferDetails.style.display = "none";
      setCardFieldsRequired(false);
    }
  });

  function setCardFieldsRequired(required) {
    document.getElementById("cardName").required = required;
    document.getElementById("cardNumber").required = required;
    document.getElementById("cardExpiry").required = required;
    document.getElementById("cardCVC").required = required;
  }

  // Checkout form submit handler
  checkoutForm.addEventListener("submit", e => {
    e.preventDefault();
    const nameVal = document.getElementById("nameInput").value.trim();
    const emailVal = document.getElementById("emailInput").value.trim();
    const paymentVal = paymentMethodSelect.value;

    if (!nameVal || !emailVal || !paymentVal) {
      alert("Por favor completa todos los campos requeridos.");
      return;
    }

    if(paymentVal === "card"){
      const cardName = document.getElementById("cardName").value.trim();
      const cardNumber = document.getElementById("cardNumber").value.trim();
      const cardExpiry = document.getElementById("cardExpiry").value.trim();
      const cardCVC = document.getElementById("cardCVC").value.trim();

      if(!cardName || !cardNumber || !cardExpiry || !cardCVC) {
        alert("Por favor completa todos los datos de la tarjeta.");
        return;
      }
      // Additional validation can be implemented here
    }

    alert("¡Gracias por su compra! Tu pedido ha sido recibido y será procesado pronto.");
    cart = [];
    renderCart();
    backToStore();
  });

  // Initialize page
  window.addEventListener("DOMContentLoaded", () => {
    renderProducts(products);
    renderCart();
    document.querySelectorAll('.filters input[type="checkbox"]').forEach(chk => {
      chk.addEventListener('change', filterProducts);
    });
  });
</script>
</body>
</html>

